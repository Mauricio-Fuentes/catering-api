generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String
  lastname  String
  datebirth DateTime
  phone     String?
  email     String?
  address   String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model DetailPlanType {
  id         Int       @id @default(autoincrement())
  plantypeid Int
  recipeid   Int
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())
}

model Payment {
  id        Int       @id @default(autoincrement())
  planid    Int       @default(1)
  amount    Float
  currency  Int
  status    Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model Plan {
  id         Int       @id @default(autoincrement())
  plantypeid Int
  clientid   Int
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())
}

model PlantType {
  id          Int       @id(map: "PlanType_pkey") @default(autoincrement())
  description String
  amount      Float
  discount    Float
  currency    Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now())
}

model Product {
  id             Int       @id @default(autoincrement())
  name           String
  quantity       Int
  measure        Int
  registeruserid Int?
  registerDate   DateTime  @default(now())
  modifyuserid   Int?
  modifyDate     DateTime  @default(now())
  tz_lock        Int       @default(0)
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @default(now())
}

model Recipe {
  id           Int       @id @default(autoincrement())
  description  String
  registerdate DateTime?
  modifydate   DateTime?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @default(now())
}

model Review {
  id        Int       @id @default(autoincrement())
  clientid  Int
  weight    Int?
  height    Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model User {
  id        Int       @id @default(autoincrement())
  user      String
  email     String    @unique
  name      String
  password  String
  role_id   Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model detailRecipe {
  id        Int       @id(map: "DetailRecipe_pkey") @default(autoincrement())
  recipeid  Int
  productid Int
  quantity  Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}
